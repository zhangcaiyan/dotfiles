export TERM="xterm-color"
export CLICOLOR=1
# export COLOR_NC='\e[0m' # No Color
# export COLOR_WHITE='\e[1;37m'
# export COLOR_BLACK='\e[0;30m'
# export COLOR_BLUE='\e[0;34m'
# export COLOR_LIGHT_BLUE='\e[1;34m'
# export COLOR_GREEN='\e[0;32m'
# export COLOR_LIGHT_GREEN='\e[1;32m'
# export COLOR_CYAN='\e[0;36m'
# export COLOR_LIGHT_CYAN='\e[1;36m'
# export COLOR_RED='\e[0;31m'
# export COLOR_LIGHT_RED='\e[1;31m'
# export COLOR_PURPLE='\e[0;35m'
# export COLOR_LIGHT_PURPLE='\e[1;35m'
# export COLOR_BROWN='\e[0;33m'
# export COLOR_YELLOW='\e[1;33m'
# export COLOR_GRAY='\e[0;30m'
# export COLOR_LIGHT_GRAY='\e[0;30m'

parse_git_branch() {
  RSLT=''
  GIT_BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/^* //'` 
  if [ "$GIT_BRANCH" ]
  then
    GIT_STATUS=`git status 2> /dev/null | grep 'working directory clean'`
    CLR='2'
    if [ "$GIT_STATUS" ]
    then
      CLR='2'
    else
      CLR='1'
    fi
    RSLT=": [0;3${CLR}m${GIT_BRANCH}"
  fi
  echo $RSLT
}

parse_git_remote_status() {
  RSLT=''
  GIT_REMOTE_STATUS=`git status 2>/dev/null | grep 'Your branch is ahead of'`
  if [ "$GIT_REMOTE_STATUS" ]
  then
    RSLT="[0;31m?ahead"
  fi
  echo $RSLT
}

COL=`expr $COLUMNS - 1`
LINE=''
COUNT=0
while test ${COL} -gt $COUNT
do
  let COUNT++
  LINE="${LINE}â”€"
done

export PS1='\n\[\e[0;30m\]â”Œ${LINE}\[\e[${COL}D\]â”€â”€â”€â”€[\t `rvm current`\[\e[0;30m\]]â”€â”€â”€â”€â”€â”€â”€â”€[\[\e[0;36m\]\w$(parse_git_branch)$(parse_git_remote_status)\[\e[0;30m\]]
â””â”€â”€> \$ \[\e[0m\]'
